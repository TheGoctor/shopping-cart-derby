#ifndef _ENUMS_H_
#define _ENUMS_H_

#define NULL 0
#include "Wwise/Wwise_IDs.h"

//type enum for the shape of the bounding volume of an object
enum EBVSHAPE {BSPHERE = 1, BAABB = 2, BOBB = 3, BLINE = 4,
BPLANE = 5, BFRUSTUM = 6, BCAPSULE = 7};
//type enum for the object holding the collideable component
//NOTE: OBJPITEM was replaced with OBJHELDITEM, but the replacement was added. . .
// please make sure you replace when you're replacing, don't just add it in
enum EOBJTYPE {OBJPLAYER = 1, OBJGITEM = 2,
OBJPITEM = 3, OBJWALL = 4, OBJSHELF = 5, OBJENDCAP = 6,
OBJCHECKOUT = 7, OBJCAMERA = 8, OBJFRUSTUM = 9, OBJHELDITEM = 10, 
OBJFSD = 11, OBJBANANA = 12, OBJPIE = 13, OBJPBUTTER = 14,
OBJTURKEY = 15, OBJSOUP = 16, OBJDONUT = 17, OBJJAM = 19,
OBJENERGYDRINK = 20};

enum EPlayerNumbers { PLAYERMIN = -1, PLAYER1, PLAYER2, PLAYER3, PLAYER4, PLAYERMAX };

enum EHeldItemType { NO_HELD_ITEM = -1, TURKEY, BANANA, PEANUT_BUTTER, PIE, 
ENERGY_DRINK, SOUP, DONUT, JAM, MAX_HELD_ITEMS, MAX_ATTACK_ITEMS = PIE };

enum EHeapID{HEAPID_GENERAL, HEAPID_EVENT, HEAPID_RENDER, HEAPID_DYNARRAY};

enum EEventPriority{PRIORITY_IMMEDIATE, PRIORITY_NORMAL, PRIORITY_INPUT, 
PRIORITY_UPDATE, PRIORITY_COLLISION, PRIORITY_RENDER, PRIORITY_SHUTDOWN};

enum EObjectID{ GLOBAL_ID = 0,  
BIKER_ID, SASHA_ID, LARPER_ID, BANDITOS_ID, SCIENTIST_ID, CRYGAME_ID, STORYTIME_ID, ITEM_ID, 
MAX_ID};

enum EDepartment { NO_DEPARTMENT = -1, DAIRY, DRY_GOODS, FREEZER, BAKERY, 
CANNED_GOODS, PRODUCE, DELI, MEATS, SNACKS, MAX_DEPARTMENTS};

enum EGoalItemType { NO_ITEM = -1, GORILLA_MILK, CAPTAIN_FLAKEY, PIZZA,
CAKE, CANNED_BEARS, CARROTS, SAMMY_SANDWICH, SQUID, AGENT_ORANGE, MAX_GOAL_ITEMS };

enum ECharacter{ BIKER_CHARACTER = 0 , BANDITOS_CHARACTER, LARPERS_CHARACTER, SCIENTIST_CHARACTER,
 SASHA_CHARACTER, CRYGAME_CHARACTER, STORYTIME_CHARACTER ,MAX_CHARACTERS
};


// Addd so I don't have to hardcode this value -Smith
#define NUM_ITEMS_IN_LEVEL 8

// Game States
// NOTE:	When adding or removing a state, verify with lua that
//				the numbers are still corresponding to the actual enums
//				(E.G. Objects associated with 1, the MAIN_MENU_STATE will
//				not be correct if something is added before MAIN_MENU_STATE
//				in this enum declaration since MAIN_MENU_STATE will be 2 at
//				that point.)
//			The safe way to add values is to add them to the end of the list, 
//				before MAX_STATE. That way, a check is unnecessary.
//				(Also, label in comments the state name at any location you use a 
//				hard number instead of the enum name, i.e. in lua, to assist
//				in any future changes)
//											- Smith
enum EGameState {MIN_STATE = -1,
INTRO_STATE = '0',
MAIN_MENU_STATE,
GAMEPLAY_STATE,
PAUSE_STATE,
WIN_STATE,
LOSE_STATE,
CONSOLE_STATE,
GAME_MODE_SELECT_STATE,
CHARACTER_SELECT_STATE,
CHARACTER_SELECT_STATE2,
CHARACTER_SELECT_STATE3,
CHARACTER_SELECT_STATE4,
CHARACTER_SELECT_STATE5,
CHARACTER_SELECT_STATE6,
CHARACTER_SELECT_STATE7,
OPTIONS_STATE,
CREDITS_STATE,
KEYBIND_STATE,
HOW_TO_PLAY_STATE,
HOW_TO_PLAY_STATE1,
HOW_TO_PLAY_STATE2,
HOW_TO_PLAY_STATE3,
HOW_TO_PLAY_STATE4,
HOW_TO_PLAY_STATE5,
HOW_TO_PLAY_STATE6,
HOW_TO_PLAY_STATE7,
HOW_TO_PLAY_STATE8,
HOW_TO_PLAY_STATE9,
HOW_TO_PLAY_STATE10,
HOW_TO_PLAY_STATE11,
HOW_TO_PLAY_STATE12,
HOW_TO_PLAY_STATE13,
HOW_TO_PLAY_STATE14,
HOW_TO_PLAY_STATE15,
PAUSE_OPTIONS_STATE,
PAUSE_KEYBINDS_STATE,
IN_GAME_HOW_TO_PLAY_STATE,
LEVEL_SELECT_STATE, 
LEVEL_SELECT_STATE2, 
QUIT_CONFIRMATION_STATE,
IN_GAME_HOW_TO_PLAY_CONTROLLER_STATE,
MAX_STATE};

///////////////////////////////////////////////
//		CHARACTER SET ENUM 
//	Used Currently for Shadow Comps
///////////////////////////////////////////////
enum ECharacterSet { CS_MIN = -1, CS_BIKERS, CS_BANDITOS, CS_LARPERS,
CS_SCIENTISTS, CS_SASHA, CS_STORYTIME, CS_ENDGAME, CS_MAX };

///////////////////////////////////////////////
//		RENDER FUCTION ENUMS
///////////////////////////////////////////////
enum ERenderFunc { RF_MIN = -1, RF_VERT, RF_INDEXED_VERT, RF_INDEXED_VERT_TEX2, RF_BONES, RF_ANIM,
	RF_PARTICLE, RF_TEXTURE_CHANGE, RF_VERT_TEX2, RF_TEXTURE_CHANGE_INST, RF_MAX };


///////////////////////////////////////////////////////
//       RENDER CONTEXT ENUMS
//////////////////////////////////////////////////////
enum ERenderContext { RC_MIN = -1, RC_FLAT,
// level geomery
RC_ABCART, RC_ACDUCT, RC_BAKERYSIGN, /*RC_BASICCUTOUT,*/
RC_BCA, RC_BCB, RC_BCC, 
RC_BOYSROOM, RC_BBWINDOW, RC_BUTCHERSIGN, RC_BOXES,
RC_CEILING0, RC_CEILING1, RC_DAIRY, RC_DELISIGN, RC_DELIWINDOW, 
RC_EMPDOOR, RC_EOTM, RC_ENDCAP, RC_EXITSIGN, 
RC_FLOOR0, RC_FLOOR1, RC_FLOOR2, RC_FLOOR3,
RC_FLOOR4, RC_FLOOR5, RC_FLOOR6, RC_FLOOR7,
RC_FLOOR8, RC_FLOOR9, RC_FLOORTRIM, RC_FRONTDOOR,
RC_FSDCL, RC_FSDCM, RC_FSDCS, RC_FSDSL,
RC_FSDSM, RC_FSDSS, RC_GIRLSROOM, RC_GLASSCOUNTER,
RC_GLASSFREEZER, RC_HALFWALL, RC_HELPDESK, RC_LIGHTS,
RC_LOBSTERSIGN, RC_LOBSTERTANK, RC_MEAT, RC_OFL, RC_OFR,
RC_OUTSIDE, RC_PALLETS, RC_PIRATE, RC_PRODUCEL,
RC_PRODUCER, RC_REGISTER, RC_SHELF, RC_SHELFSTUFF,
RC_SNOWMAN, RC_STARTLIGHT, RC_UMBRA, RC_WALL0,
RC_WALL1, RC_WALLSUPPORT,
RC_BREAKUP_SIGN0, RC_BREAKUP_SIGN1, 
RC_ALIEN, RC_LITTLE_EVELYN,

// goal items
RC_GORILLA_MILK, RC_CAPTAIN_FLAKEY, RC_PIZZA, 
RC_CAKE, RC_CANNED_BEARS, RC_CARROTS, RC_SAMMY_SANDWICH,
RC_SQUID, RC_AGENT_ORANGE, 
// character models
RC_ANIM_STEVE, RC_ANIM_EUGENE, RC_ANIM_SCICART,
RC_ANIM_BULLDOG, RC_ANIM_MA, RC_ANIM_BIKCART,
RC_ANIM_SEMOUR, RC_ANIM_DAVE, RC_ANIM_LARPCART,
RC_ANIM_GERMINAL, RC_ANIM_RICO, RC_ANIM_BANDCART,
RC_ANIM_SASHA, 
RC_ANIM_FITZ, RC_ANIM_PHAROH, RC_ANIM_ALIENCART,
RC_ANIM_EVELYN, RC_ANIM_SHADE, RC_ANIM_NLCART,
RC_ANIM_DONUT,

// power ups
RC_BANANA, RC_CHICKENSOUP, RC_DONUT, RC_TURKEYBOX,
RC_JAM, RC_PEANUTBUTTER, RC_PIE, RC_THOR, RC_TURKEY, 
RC_PEANUTPILE,

// Effects
RC_CIRCLE_SHADOW, RC_SHELF_SHADOW, RC_FSDS_L_SHADOW, 
RC_SQUARE_SHADOW, RC_CASHIER_SHADOW,

RC_BLUE_LIGHT_SPECIAL,

RC_CART_SKID_MARKS, RC_SCI_SKIDS, RC_PB_MARKS, 
RC_CART_MUD, RC_SNOWFLAKE_EFFECT, RC_SNOWFLAKE_B_EFFECT,

RC_FLOOR_SPLAT,
RC_CHARACTER_SHADOW_BLOB,

RC_CART_SMOKE_EFFECT,
RC_ITEM_EFFECT_GLOW, RC_ITEM_EFFECT_SHINE,
RC_ITEM_EFFECT_STAR, 

RC_GOAL_ICON_EFFECT_SHEET,

RC_BOOST_GLOW_BLUE, RC_BOOST_LIGHTNING, RC_CLOUD_GRAY,
RC_TURKEY_KRACK_SMALL, RC_TURKEY_KRACK_BIG, RC_TURKEY_KRACK,

RC_BROTH, RC_SOUP_SPARKLE,
RC_SHLOOP_POPUP,
RC_DRIP_LEFT, RC_DRIP_RIGHT, RC_PB_DRIP_LEFT, RC_PB_DRIP_RIGHT,
RC_SQUISH_POPUP,

RC_COLLISION_EFFECT_GREEN_SMALL, RC_COLLISION_EFFECT_GREEN_MID,
RC_COLLISION_EFFECT_GREEN_BIG, RC_COLLISION_EFFECT_CRASH_POPUP,

RC_COLLISION_EFFECT_RED_SMALL, RC_COLLISION_EFFECT_RED_MID,
RC_COLLISION_EFFECT_RED_BIG, RC_COLLISION_EFFECT_POW_POPUP,

RC_COLLISION_EFFECT_BLUE_SMALL, RC_COLLISION_EFFECT_BLUE_MID,
RC_COLLISION_EFFECT_BLUE_BIG, RC_COLLISION_EFFECT_SMASH_POPUP,

RC_COLLISION_EFFECT_YELLOW_SMALL, RC_COLLISION_EFFECT_YELLOW_MID,
RC_COLLISION_EFFECT_YELLOW_BIG, RC_COLLISION_EFFECT_CRUNCH_POPUP,

RC_JAM_USE_EFFECT_JAR,
RC_JAM_HIT_EFFECT_BLOB, RC_JAM_HIT_EFFECT_SPLURCH_POPUP,
RC_DONUT_EFFECT_PUFF, RC_BLUE_PUFF,
RC_SPLAT_BURST, RC_SPLAT_POPUP,
RC_FIREWORK_BLUE, RC_FIREWORK_GREEN, RC_FIREWORK_BLACK, RC_FIREWORK_ORANGE,
RC_BOLT,
RC_CONFETTI_STRIP, RC_CONFETTI_STAR, RC_CAUTION,

RC_MAX };





///////////////////////////////////////////////////////
//       SOUND API ENUMS
//////////////////////////////////////////////////////
enum SoundID{ 
////Menu sounds
MENU_SELECT				=	AK::EVENTS::PLAY_SFX_MENU_SELECT, 
MENU_INVALID_SELECTION	=	AK::EVENTS::PLAY_SFX_MENU_INVALIDSELECTION,
MENU_SCROLL				=	AK::EVENTS::PLAY_SFX_MENU_SCROLL, 
MENU_OPTION_CHANGE		=	AK::EVENTS::PLAY_SFX_MENU_OPTIONCHANGE,
MENU_CASHREGISTER		=	AK::EVENTS::PLAY_SFX_MENU_CASHREGISTER,
MENU_MUSIC_PLAY			=	AK::EVENTS::PLAY_MX_MENU,

//Gameplay sounds and Annoucer Dialog
GAMEPLAY_MUSIC_STOP		=	AK::EVENTS::STOP_MX_GAMEPLAY, 
START_COUNTDOWN			=	AK::EVENTS::PLAY_DX_GAMEPLAY_STARTRACECOUNTDOWN,   
WELCOME_TO				=	AK::EVENTS::PLAY_DX_ANNOUNCER_WELCOME,
ORANGE_SPAWN_SOUND		=	AK::EVENTS::PLAY_DX_ANNOUNCER_AGENTORANGE,
BEAR_IN_CAN_SPAWN_SOUND =	AK::EVENTS::PLAY_DX_ANNOUNCER_BEARINACAN,
BIRTHDAYCAKE_SPAWN		=	AK::EVENTS::PLAY_DX_ANNOUNCER_BIRTHDAYCAKE,
BLUEBOMBER_SPAWN		=	AK::EVENTS::PLAY_DX_ANNOUNCER_BLUEBOMBER ,
CAPTAINFLAKYS_SPAWN		=	AK::EVENTS::PLAY_DX_ANNOUNCER_CAPTAINFLAKYS ,
CARROTS_SPAWN			=	AK::EVENTS::PLAY_DX_ANNOUNCER_CARROTS ,
GORILLAMILD_SPAWN		=	AK::EVENTS::PLAY_DX_ANNOUNCER_GORILLAMILK ,
PIRATESQUID_SPAWN		=	AK::EVENTS::PLAY_DX_ANNOUNCER_PIRATESQUID,
SAMMYTHESANDWICH_SPAWN	=	AK::EVENTS::PLAY_DX_ANNOUNCER_SAMMYTHESANDWICH, 
LEADTAKEN_BANDITOS		=	AK::EVENTS::PLAY_DX_ANNOUNCER_LEADTAKEN_BANDITOS ,
LEADTAKEN_BIKERS		=	AK::EVENTS::PLAY_DX_ANNOUNCER_LEADTAKEN_BIKERS ,
LEADTAKEN_LARPERS		=	AK::EVENTS::PLAY_DX_ANNOUNCER_LEADTAKEN_LARPERS ,
LEADTAKEN_SASHA			=	AK::EVENTS::PLAY_DX_ANNOUNCER_LEADTAKEN_SASHA,
LEADTAKEN_SCIENTISTS	=	AK::EVENTS::PLAY_DX_ANNOUNCER_LEADTAKEN_SCIENTISTS, 
GOAL_ITEM_DROP			=	AK::EVENTS::PLAY_SFX_ITEM_GOALITEM_DROP,
ITEM_PICK_UP			=	AK::EVENTS::PLAY_SFX_ITEM_PICKUP, 
WINSTATE_EXPLOSION		=	AK::EVENTS::PLAY_SFX_HUD_FIREWORKS,

//Held item sounds
ITEM_CREAMPIE_USE		=	AK::EVENTS::PLAY_SFX_ITEM_CREAMPIE_USE,
ITEM_ENERGYDRINK_USE	=	AK::EVENTS::PLAY_SFX_ITEM_ENERGYDRINK_USE, 
ITEM_JAM_USE			=	AK::EVENTS::PLAY_SFX_ITEM_JAM_USE,
ITEM_JAM_HIT			=	AK::EVENTS::PLAY_SFX_ITEM_JAM_HIT,
ITEM_PEANUTBUTTER_USE	=	AK::EVENTS::PLAY_SFX_ITEM_PEANUTBUTTER_USE, 
ITEM_DOUGHNUT_USE		=	AK::EVENTS::PLAY_SFX_ITEM_DOUGHNUT_USE, 
ITEM_DOUGHNUT_AURA		=	AK::EVENTS::PLAY_SFX_ITEM_DOUGHNUT_AURA,
ITEM_DOUGHNUT_IMPACT	=	AK::EVENTS::PLAY_SFX_ITEM_DOUGHNUT_IMPACT,
ITEM_CHICKENSOUP_USE	=	AK::EVENTS::PLAY_SFX_ITEM_CHICKENSOUP, 
ITEM_TURKEY_USE			=	AK::EVENTS::PLAY_SFX_ITEM_TURKEY_USE, 
ITEM_TURKEY_TRAVEL		=	AK::EVENTS::PLAY_SFX_ITEM_TURKEY_TRAVEL,  
ITEM_TURKEY_IMPACT		=	AK::EVENTS::PLAY_SFX_ITEM_TURKEY_IMPACT,
ITEM_TURKEY_EN_IMPACT	=	AK::EVENTS::PLAY_SFX_ITEM_TURKEY_BOUNCE,

// Biker Sounds
BULLDOG_CART_BRAKE		=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_CART_BRAKE, 
BULLDOG_CART_BOOST		=	AK::EVENTS::PLAY_SFX_ITEM_BOOST, 
BULLDOG_HURT			=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_HURT, 
BULLDOG_COLLECTION		=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_COLLECTION, 
BULLDOG_ITEM_USE		=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_ITEMUSE, 
BULLDOG_SHOVE			=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_SHOVE, 
BULLDOG_VICTORY			=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_VICTORY, 
BULLDOG_SPEED_PLAY		=	AK::EVENTS::PLAY_SFX_CHARACTERS_BULLDOGMA_SPEED, 
BULLDOG_BIKE_SLIP		=	AK::EVENTS::PLAY_SFX_CART_BIKE_SLIP,
BULLDOG_BIKE_START		=	AK::EVENTS::PLAY_SFX_CART_BIKE_START,
BULLDOG_BIKE_START_FAIL	=	AK::EVENTS::PLAY_SFX_CART_BIKE_START_FAIL,
BULLDOG_ALLGOALITEMS	=	AK::EVENTS::PLAY_DX_BULLDOG_ALLGOALITEMS ,
BULLDOG_LOSS			=	AK::EVENTS::PLAY_DX_BULLDOG_LOSS ,

//Larper Sounds
LARPER_ALLGOALITEMS		=	AK::EVENTS::PLAY_DX_DAVE_ALLGOAL ,
LARPER_COLLECTION		=	AK::EVENTS::PLAY_DX_DAVE_COLLECTION ,
LARPER_HURT				=	AK::EVENTS::PLAY_DX_DAVE_HURT ,
LARPER_ITEMUSE			=	AK::EVENTS::PLAY_DX_DAVE_ITEMUSE ,
LARPER_LOSS				=	AK::EVENTS::PLAY_DX_DAVE_LOSS ,
LARPER_SHOVE			=	AK::EVENTS::PLAY_DX_DAVE_SHOVE ,
LARPER_VICTORY			=	AK::EVENTS::PLAY_DX_DAVE_VICTORY ,
WOODCART_BRAKE			=	AK::EVENTS::PLAY_SFX_WOODCART_BRAKE,
WOODCART_DRIFT			=	AK::EVENTS::PLAY_SFX_WOODCART_DRIFT,
WOODCART_SPEED			=	AK::EVENTS::PLAY_SFX_WOODCART_SPEED ,

//Scientist Sounds
SCIENTIST_COLLECTION	=	AK::EVENTS::PLAY_DX_SCIENTIST_COLLECTION ,
SCIENTIST_HURT			=	AK::EVENTS::PLAY_DX_SCIENTIST_HURT ,
SCIENTIST_ITEMUSE		=	AK::EVENTS::PLAY_DX_SCIENTIST_ITEMUSE ,
SCIENTIST_LOSS			=	AK::EVENTS::PLAY_DX_SCIENTIST_LOSS ,
SCIENTIST_SHOVE			=	AK::EVENTS::PLAY_DX_SCIENTIST_SHOVE ,
SCIENTIST_VICTORY		=	AK::EVENTS::PLAY_DX_SCIENTIST_VICTORY ,
SCIENTIST_ALLGOALITEMS	=	AK::EVENTS::PLAY_DX_SCIENTIST_ALLGOALITEMS,
SCIENTIST_BRAKE			=	AK::EVENTS::PLAY_SFX_SCIENTIST_BRAKE,
SCIENTIST_DRIFT			=	AK::EVENTS::PLAY_SFX_SCIENTIST_DRIFT, 
SCIENTIST_SPEED			=	AK::EVENTS::PLAY_SFX_SCIENTIST_SPEED,

//Bandito sounds
BANDITOS_ALLGOALITEMS	=	AK::EVENTS::PLAY_DX_GERMINAL_ALLGOALITEMS ,
BANDITOS_COLLECTION		=	AK::EVENTS::PLAY_DX_GERMINAL_COLLECTION ,
BANDITOS_HURT			=	AK::EVENTS::PLAY_DX_GERMINAL_HURT,
BANDITOS_ITEMUSE		=	AK::EVENTS::PLAY_DX_GERMINAL_ITEMUSE,
BANDITOS_LOSS			=	AK::EVENTS::PLAY_DX_GERMINAL_LOSS ,
BANDITOS_SHOVE			=	AK::EVENTS::PLAY_DX_GERMINAL_SHOVE,
BANDITOS_VICTORY		=	AK::EVENTS::PLAY_DX_GERMINAL_VICTORY,

//SASHA sounds
SASHA_BRAKE				=	AK::EVENTS::PLAY_SFX_SASHA_BRAKE, 
SASHA_DRIFT				=	AK::EVENTS::PLAY_SFX_SASHA_DRIFT, 
SASHA_SPEED				=	AK::EVENTS::PLAY_SFX_SASHA_SPEED,
SASHA_ALLGOALITEMS		=	AK::EVENTS::PLAY_DX_SASHA_ALLGOALITEMS, 
SASHA_HURT				=	AK::EVENTS::PLAY_DX_SASHA_HURT,
SASHA_ITEMUSE 			=	AK::EVENTS::PLAY_DX_SASHA_ITEMUSE ,
SASHA_LOSE 				=	AK::EVENTS::PLAY_DX_SASHA_LOSE ,
SASHA_PICKUP 			=	AK::EVENTS::PLAY_DX_SASHA_COLLECTION ,
SASHA_WIN 				=	AK::EVENTS::PLAY_DX_SASHA_WIN ,

//CryGame Sounds
CRYGAME_ALLGOALITEMS	=	AK::EVENTS::PLAY_DX_FITZ_ALLGOAL,
CRYGAME_COLLECTION		=	AK::EVENTS::PLAY_DX_FITZ_COLLECTION, 
CRYGAME_HURT			=	AK::EVENTS::PLAY_DX_FITZ_HURT,
CRYGAME_ITEMUSE			=	AK::EVENTS::PLAY_DX_FITZ_ITEMUSE,
CRYGAME_LOSS			=	AK::EVENTS::PLAY_DX_FITZ_LOSS,
CRYGAME_SHOVE			=	AK::EVENTS::PLAY_DX_FITZ_SHOVE,
CRYGAME_VICTORY			=	AK::EVENTS::PLAY_DX_FITZ_VICTORY,

//Story Time Sounds
STORYTIME_ALLGOALITEMS	=	AK::EVENTS::PLAY_DX_GIRL_ALLGOAL, 
STORYTIME_COLLECTION	=	AK::EVENTS::PLAY_DX_GIRL_COLLECTION,
GSTORYTIME_HURT			=	AK::EVENTS::PLAY_DX_GIRL_HURT,
STORYTIME_LOSS			=	AK::EVENTS::PLAY_DX_GIRL_LOSS,
STORYTIME_SHOVE			=	AK::EVENTS::PLAY_DX_GIRL_SHOVE,
STORYTIME_VICTORY		=	AK::EVENTS::PLAY_DX_GIRL_VICTORY,

//Cart sounds 
CART_WALL_COLLISION		=	AK::EVENTS::PLAY_SFX_IMPACT_CART_WALL, 
CART_PLAYER_COLLISION	=	AK::EVENTS::PLAY_SFX_IMPACT_CART_ENEMY,

//Status sounds
STATUS_BLIND			=	AK::EVENTS::PLAY_SFX_PLAYER_STATUS_BLIND,
STATUS_FROZEN			=	AK::EVENTS::PLAY_SFX_PLAYER_STATUS_FROZEN, 
STATUS_SLOWED			=	AK::EVENTS::PLAY_SFX_PLAYER_STATUS_SLOWED_01, 
STATUS_STUN				=	AK::EVENTS::PLAY_SFX_PLAYER_STATUS_STUN, 

//Stop sounds
ITEM_DOUGHNUT_AURA_STOP =   AK::EVENTS::STOP_SFX_ITEM_DOUGHNUT_AURA,
STATUS_FROZEN_STOP		=	AK::EVENTS::STOP_SFX_PLAYER_STATUS_FROZEN,
BULLDOG_SPEED_STOP		=	AK::EVENTS::STOP_SFX_CHARACTERS_BULLDOGMA_SPEED, 
ITEM_TURKEY_TRAVEL_STOP	=	AK::EVENTS::STOP_SFX_ITEM_TURKEY_TRAVEL,
MENU_MUSIC_STOP			=	AK::EVENTS::STOP_MX_MENU, 
CHICKENSOUP_STOP		=	AK::EVENTS::STOP_SFX_ITEM_CHICKENSOUP_LOOP, 
SCIENTIST_SPEED_STOP	=	AK::EVENTS::STOP_SFX_SCIENTIST_SPEED, 
WOODCART_SPEED_STOP		=	AK::EVENTS::STOP_SFX_WOODCART_SPEED ,
SASHA_SPEED_STOP		=	AK::EVENTS::STOP_SFX_SASHA_SPEED,
STOP_ALL_EXCEPT			=	AK::EVENTS::STOP_ALL_EXCEPTMENU,

MAX_SOUNDS };
#endif // _ENUMS_H_